import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

/**
 * The EmployeeDelete class represents the panel for deleting items from the order in the employee interface.
 * This panel allows employees to confirm deletion of selected items or go back without deleting.
 */
public class EmployeeDelete extends JPanel {
    private JButton deleteButton; // Button for confirming deletion
    private JButton backButton; // Button for going back without deleting

    /**
     * Constructs a new EmployeeDelete panel and initializes its components.
     * This constructor sets up the layout and adds buttons for deletion and going back.
     */
    public EmployeeDelete() {
        setLayout(new BorderLayout());

        // Label indicating deletion confirmation
        JLabel label = new JLabel("Are you sure you want to delete?");
        add(label, BorderLayout.NORTH);

        // Panel for buttons
        JPanel deleteScreen = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 10));

        // Delete button setup
        deleteButton = new JButton("Delete");
        deleteButton.setPreferredSize(new Dimension(150, 70));
        deleteButton.setFont(new Font("Arial", Font.PLAIN, 25));
        deleteScreen.add(deleteButton);

        // Back button setup
        backButton = new JButton("Back");
        backButton.setPreferredSize(new Dimension(150, 70));
        backButton.setFont(new Font("Arial", Font.PLAIN, 25));
        deleteScreen.add(backButton);

        // Add buttons panel to the center of the panel
        add(deleteScreen, BorderLayout.CENTER);

        // Add action listeners to buttons
        deleteButton.addActionListener(new ActionListener() {
            /**
             * Invoked when the delete button is clicked.
             * This method handles the deletion of selected items from the order.
             * It removes the selected items from the order display and updates the total price.
             * @param e The action event generated by clicking the delete button.
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                // Handle delete action
                // Clear selected items from the order
                for (int i = 0; i < Employee.toBeDeleted.size(); i++) {
                    int index = Employee.selectedMenuIDs.indexOf(Employee.toBeDeleted.get(i));
                    if (index != -1) {
                        Employee.upperOrderPanel.remove(index);
                        Employee.selectedMenuIDs.remove(index);
                    }
                }
                Employee.toBeDeleted.clear(); // Clear the list of items to be deleted
                Employee.update(); // Update the order display
            }
        });

        backButton.addActionListener(new ActionListener() {
            /**
             * Invoked when the back button is clicked.
             * This method handles going back without deleting any items.
             * It closes the current frame.
             * @param e The action event generated by clicking the back button.
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                // Handle back action by closing the frame
                SwingUtilities.getWindowAncestor(EmployeeDelete.this).dispose();
            }
        });
    }
}